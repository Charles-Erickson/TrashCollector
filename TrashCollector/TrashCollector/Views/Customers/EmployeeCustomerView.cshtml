@model TrashCollector.Models.Customer


@{
    ViewBag.Title = "EmployeeCustomerView";
}

<h2>EmployeeCustomerView</h2>

<style>
    #map {
        height: 400px;
        width: 100%;
    }
</style>
<html>

<body>
    <div id="map">

    </div>
    <div>
        <script>
            var map, infoWindow;
            function initMap() {
                map = new google.maps.Map(document.getElementById('map'), {
                    center: { lat: @Model.Lat, lng:@Model.Lng },
                    zoom: 8
                });
                infoWindow = new google.maps.InfoWindow;
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function (position) {
                        var pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };
                        infoWindow.setPosition(pos);

                        infoWindow.open(map);
                        map.setCenter(pos);
                    }, function () {
                        handleLocationError(true, infoWindow, map.getCenter());
                    });
                } else {
                    handleLocationError(false, infoWindow, map.getCenter());
                }
                setMarkers(map);
            }
            var beaches = [
                ['Bar', 43.016630, -88.007280, 1],
            ];
            function setMarkers(map) {

                var image = {
                    url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',
                    size: new google.maps.Size(20, 32),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(0, 32)
                };
                var shape = {
                    coords: [1, 1, 1, 20, 18, 20, 18, 1],
                    type: 'poly'
                };
                var lat =@Model.Lat;
                var lng =@Model.Lng;
                    var marker = new google.maps.Marker({
                        position : {
                            lat: @Model.Lat,
                            lng: @Model.Lng
                        },
                        map: map,
                        icon: image,
                        shape: shape,
                        title: 'Address',
                        zIndex: 1
                    });
                var bounds = new google.map.LatLngBounds();
                loc = new google.maps.LatLng(marker.position.lat(), marker.position.lng());
                bounds.extend(loc);
                map.fitBounds(bounds);
                map.panToBounds(bounds);
            }
            function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                infoWindow.setPosition(pos);
                infoWindow.setContent(browserHasGeolocation ?
                    'Error: The Geolocation service failed.' :
                    'Error: Your browser doesn\'t support geolocation.');
                infoWindow.open(map);
            }
        </script>
        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDF86evlibyP2cfdn4g8H86ZlNtLFftiLM&callback=initMap">
        </script>


        <dl class="dl-horizontal">

            <dt>
                @Html.DisplayNameFor(model => model.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FirstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LastName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LastName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Address)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Address)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Zipcode)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Zipcode)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.City)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.City)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.State)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.State)
            </dd>

        </dl>
